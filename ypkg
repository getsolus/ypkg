#!/usr/bin/env python2
# -*- coding: utf-8 -*-
#
#  This file is part of ypkg2
#
#  Copyright 2015-2020 Solus Project
#
#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#

from ypkg2 import console_ui
from ypkg2.main import show_version
import subprocess
import sys
import os
import argparse


def main():
    parser = argparse.ArgumentParser(description="Ypkg")
    parser.add_argument("-n", "--no-colors", help="Disable color output",
                        action="store_true")
    parser.add_argument("-v", "--version", action="store_true",
                        help="Show version information and exit")
    parser.add_argument("-f", "--force", help="Force install dependencies, "
                        "i.e. no prompt", action="store_true")
    parser.add_argument("-D", "--output-dir", type=str,
                        help="Set the output directory for resulting files")
    # Main file
    parser.add_argument("filename", help="Path to the ypkg YAML file",
                        nargs='?')

    args = parser.parse_args()
    # Kill colors
    if args.no_colors:
        console_ui.allow_colors = False
    # Show version
    if args.version:
        show_version()

    # Grab filename
    if not args.filename:
        console_ui.emit_error("Error", "Please provide a filename")
        print("")
        parser.print_help()
        sys.exit(1)

    needFakeroot = True
    if os.geteuid() == 0:
        if "FAKED_MODE" not in os.environ:
            needFakeroot = False

    args = " ".join(sys.argv[1:])
    vargs = sys.argv[1:]
    cargs = " ".join(filter(lambda x: x != "-f" and x != "--force", vargs))
    try:
        subprocess.check_call("ypkg-install-deps {}".format(args), shell=True)
        if needFakeroot:
            sub = "fakeroot "
        else:
            sub = ""
        subprocess.check_call("{}ypkg-build {}".format(sub, cargs), shell=True)
    except Exception as e:
        print(e)
        sys.exit(1)


if __name__ == "__main__":
    main()
